{"version":3,"file":"stripe-angular.js","sources":["../../src/StripeTypes.ts","../../src/StripeScriptTag.ts","../src/components/StripeComponent.ts","../src/components/StripeSource.component.ts","../src/components/StripeCard.component.ts","../src/components/StripeBank.component.ts","../../src/index.ts","../../src/stripe-angular.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>('Stripe Publishable Key')\nexport const STRIPE_OPTIONS = new InjectionToken<stripe.StripeOptions>('Stripe Options')\n\nexport interface Stripe{\n  (string:string,options?:stripe.StripeOptions):stripe.Stripe\n}\n\nexport interface BankAccountTokenOptions extends stripe.BankAccountTokenOptions {\n  metadata?:Record<string, string>;\n}","import { DOCUMENT } from '@angular/common'\nimport { Injectable, Inject } from \"@angular/core\"\n\nimport {\n  Stripe, STRIPE_PUBLISHABLE_KEY, STRIPE_OPTIONS\n  //, StripeCard, StripeToken\n} from \"./StripeTypes\"\n\n@Injectable({providedIn: 'root'}) export class StripeScriptTag {\n  src:string = \"https://js.stripe.com/v3/\"\n  Stripe!:Stripe//set at runtime\n  StripeInstance!:stripe.Stripe\n  load:Promise<any>\n  window: any\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    @Inject(STRIPE_PUBLISHABLE_KEY) key?: string,\n    @Inject(STRIPE_OPTIONS) options?: stripe.StripeOptions,\n  ){\n    this.window = this.document.defaultView;\n    this.load = this.injectIntoHead()\n    if (key) this.setPublishableKey(key, options)\n  }\n\n  promiseStripe():Promise<Stripe>{\n    return this.load\n  }\n\n  promiseInstance():Promise<stripe.Stripe>{\n    return this.promiseStripe()\n    .then(stripe=>{\n      if( !this.StripeInstance ){\n        const err = new Error(\"Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()\")\n        err[\"code\"] = \"STRIPEKEYNOTSET\"\n        throw err\n        //return Promise.reject( err )\n      }\n\n      return this.StripeInstance\n    })\n  }\n\n  setPublishableKey(\n    key:string,\n    options?:stripe.StripeOptions\n  ):Promise<stripe.Stripe>{\n    return this.load.then( ()=>\n      this.StripeInstance = this.Stripe(key, options)\n    )\n  }\n\n  injectIntoHead():Promise<Stripe>{\n    if( this.window && this.window[\"Stripe\"] ){\n      return Promise.resolve( this.Stripe = this.window[\"Stripe\"] as any )\n    }\n\n    return new Promise((res,rej)=>{\n      const head = this.getTargetTagDropElement()\n      const script = this.document.createElement(\"script\")\n      script.setAttribute(\"src\", this.src)\n      script.setAttribute(\"type\", \"text/javascript\")\n\n      script.addEventListener(\"load\",()=>{\n        this.Stripe = this.grabStripe()\n        res( this.Stripe )\n      })\n\n      head.appendChild(script)\n    })\n  }\n\n  grabStripe(): Stripe {\n    return window[\"Stripe\"] as any;\n  }\n\n  getTargetTagDropElement(){\n    let elm = this.document.getElementsByTagName(\"head\")\n\n    if(elm.length)return elm[0]\n\n    return this.document.getElementsByTagName(\"body\")[0]\n  }\n}\n","import {\n  Input, Output, EventEmitter, Component\n} from \"@angular/core\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\n\n@Component({\n  selector: \"stripe-component\", template: ``\n})\nexport class StripeComponent{\n  @Output(\"catch\") catcher:EventEmitter<stripe.Error> = new EventEmitter()\n\n  @Input() invalid?:stripe.Error\n  @Output() invalidChange:EventEmitter<stripe.Error> = new EventEmitter()\n\n  stripe!:stripe.Stripe\n\n  constructor(\n    public StripeScriptTag:StripeScriptTag\n  ){}\n\n  ngOnInit(){\n    this.init()\n  }\n\n  init():Promise<stripe.Stripe>{\n    return this.StripeScriptTag.promiseInstance()\n    .then( i=>this.stripe=i )\n  }\n}","import {\n  Input, Output, EventEmitter, Component\n} from \"@angular/core\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\nimport { StripeComponent } from \"./StripeComponent\"\n\n@Component({\n  selector: \"stripe-source\",\n  template: `\n      <ng-container *ngIf=\"!StripeScriptTag.StripeInstance\">\n          <div style=\"color:red;\">Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()</div>\n      </ng-container>\n  `,\n  exportAs:\"StripeSource\"\n}) export class StripeSource extends StripeComponent{\n  @Input() source?: stripe.Source\n  @Output() sourceChange:EventEmitter<stripe.Source> = new EventEmitter()\n\n  @Input() paymentMethod?: stripe.paymentMethod.PaymentMethod\n  @Output() paymentMethodChange:EventEmitter<stripe.paymentMethod.PaymentMethod> = new EventEmitter()\n\n  elements:any // For card, its the UI element\n\n  constructor(\n    public StripeScriptTag:StripeScriptTag\n  ){\n    super(StripeScriptTag)\n  }\n\n  createSource(\n    extraData:{ owner?: stripe.OwnerInfo, metadata?: any}\n  ):Promise<stripe.Source | void>{\n    delete this.invalid;\n    this.invalidChange.emit(this.invalid)\n\n    return this.stripe.createSource(\n      this.elements, extraData\n    )\n    .then((result:any)=>this.processSourceResult(result))\n  }\n\n  processSourceResult(\n    result: stripe.SourceResponse\n  ): stripe.Source | void {\n    if(result.error){\n      const rError = result.error\n      if( (rError as any).type === \"validation_error\" ){\n        this.invalidChange.emit( this.invalid = rError )\n      }else{\n        this.catcher.emit(rError);\n        throw rError;\n      }\n    }\n\n    const source = result.source;\n\n    if (source) {\n      this.sourceChange.emit(this.source=source);\n      return source;\n    }\n  }\n\n  createPaymentMethod(\n    extraData:{ owner?: stripe.OwnerInfo, metadata?: any}\n  ):Promise<stripe.paymentMethod.PaymentMethod | void>{\n    delete this.invalid;\n    this.invalidChange.emit(this.invalid)\n\n    return this.stripe.createPaymentMethod(\n      'card', this.elements, extraData\n    )\n    .then((result:any)=>this.processPaymentMethodResult(result))\n  }\n\n  processPaymentMethodResult(\n    result: stripe.PaymentMethodResponse\n  ): stripe.paymentMethod.PaymentMethod | void {\n    if(result.error){\n      const rError = result.error\n      if( (rError as any).type === \"validation_error\" ){\n        this.invalidChange.emit( this.invalid = rError )\n      }else{\n        this.catcher.emit(rError);\n        throw rError;\n      }\n    }\n\n    const paymentMethod = result.paymentMethod;\n\n    if (paymentMethod) {\n      this.paymentMethodChange.emit(this.paymentMethod=paymentMethod);\n      return paymentMethod;\n    }\n  }\n}\n","import {\n  ElementRef, Input, Output, EventEmitter, Component } from \"@angular/core\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\nimport { StripeSource } from \"./StripeSource.component\"\n\n@Component({\n  selector: \"stripe-card\",\n  template: `\n      <ng-container *ngIf=\"!StripeScriptTag.StripeInstance\">\n          <div style=\"color:red;\">Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()</div>\n      </ng-container>\n  `,\n  exportAs:\"StripeCard\"\n}) export class StripeCard extends StripeSource {\n  @Input() createOptions!:stripe.elements.ElementsCreateOptions\n  @Input() options!:stripe.elements.ElementsOptions\n\n  @Input() token!: stripe.Token\n  @Output() tokenChange:EventEmitter<stripe.Token> = new EventEmitter()\n\n  @Output() cardMounted:EventEmitter<any> = new EventEmitter()\n\n  @Input() complete: boolean = false\n  @Output() completeChange:EventEmitter<boolean> = new EventEmitter()\n\n  @Output() changed:EventEmitter<ICardChangeEvent> = new EventEmitter()\n\n  drawn = false\n\n  constructor(\n    public ElementRef:ElementRef,\n    public StripeScriptTag:StripeScriptTag\n  ){\n    super(StripeScriptTag)\n  }\n\n  ngOnInit(){\n    super.init().then(()=>this.redraw())\n  }\n\n  ngOnChanges( changes:any ){\n    if (this.drawn && (changes.options || changes.createOptions)) {\n      this.redraw();\n    }\n  }\n\n  redraw() {\n    if (this.drawn) {\n      this.elements.unmount();\n      this.elements.destroy();\n    }\n    this.elements = this.stripe.elements(this.createOptions).create('card', this.options)\n    this.elements.mount(this.ElementRef.nativeElement)\n\n    this.cardMounted.emit(this.elements);\n    this.elements.on('change', (result: any)=>{\n      this.changed.emit(result)\n      if (result.complete || (this.complete && !result.complete)) {\n        this.completeChange.emit(this.complete = result.complete);\n      }\n    });\n\n    this.elements.addEventListener('change', (result:any)=>{\n      if( result.error ){\n        this.invalidChange.emit( this.invalid=result.error )\n      }\n    })\n\n    this.drawn = true;\n  }\n\n  createToken(\n    extraData?:any\n  ):Promise<stripe.Token>{\n    delete this.invalid\n    this.invalidChange.emit(this.invalid)\n\n    return this.stripe.createToken(this.elements, extraData)\n    .then((result:any)=>{\n      if(result.error){\n        if( result.error.type==\"validation_error\" ){\n          this.invalidChange.emit( this.invalid=result.error )\n        }else{\n          this.catcher.emit(result.error)\n          throw result.error\n        }\n      }else{\n        this.tokenChange.emit(this.token=result.token)\n        return result.token\n      }\n    })\n  }\n}\n\ninterface ICardChangeEvent {\n  \"elementType\": string\n  error?: {\n    \"code\": string\n    \"type\": string\n    \"message\": string\n  },\n  \"value\": {\n    \"postalCode\": string\n  },\n  \"empty\": boolean,\n  \"complete\": boolean,\n  \"brand\": string\n}\n","import {\n  Input, Output, EventEmitter, Component\n} from \"@angular/core\"\nimport { StripeComponent } from \"./StripeComponent\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\n\n@Component({\n  selector: \"stripe-bank\",\n  template: `\n      <ng-container *ngIf=\"!StripeScriptTag.StripeInstance\">\n          <div style=\"color:red;\">Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()</div>\n      </ng-container>\n  `,\n  exportAs:\"StripeBank\"\n}) export class StripeBank extends StripeComponent{\n  @Input() options!: stripe.elements.ElementOptions // very similar type to card options\n\n  @Input() token!: stripe.Token\n  @Output() tokenChange:EventEmitter<stripe.Token> = new EventEmitter()\n\n  constructor(\n    public StripeScriptTag:StripeScriptTag\n  ){\n    super(StripeScriptTag)\n  }\n\n  createToken( data: stripe.BankAccountTokenOptions):Promise<stripe.Token>{\n    delete this.invalid\n    this.invalidChange.emit(this.invalid)\n\n    return this.stripe.createToken('bank_account', data)\n    .then((result: any) => { // TokenResponse\n      if(result.error){\n        if( result.error.type==\"validation_error\" ){\n          this.invalidChange.emit( this.invalid=result.error )\n        }else{\n          this.catcher.emit(result.error)\n          throw result.error\n        }\n      }else{\n        this.tokenChange.emit(this.token=result.token)\n        return result.token\n      }\n    });\n  }\n\n  /* createSource */\n}\n","export * from \"./StripeTypes\"\n\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY } from './StripeTypes'\nimport { StripeComponent } from \"./components/StripeComponent\"\n\nimport { StripeScriptTag } from \"./StripeScriptTag\"\nexport { StripeScriptTag } from \"./StripeScriptTag\"\n\nimport { StripeSource } from \"./components/StripeSource.component\"\nexport { StripeSource } from \"./components/StripeSource.component\"\n\nimport { StripeCard } from \"./components/StripeCard.component\"\nexport { StripeCard } from \"./components/StripeCard.component\"\n\nimport { StripeBank } from \"./components/StripeBank.component\"\nexport { StripeBank } from \"./components/StripeBank.component\"\n\nconst declarations = [\n  StripeComponent, // ignore do not use (has to be here for extends purposes)\n  StripeSource,\n  StripeCard,\n  StripeBank\n]\n\n@NgModule({\n  imports:[\n    CommonModule\n  ],\n  declarations,\n // providers: [ StripeScriptTag ],\n  exports:[ ...declarations ]\n}) export class StripeModule {\n  static forRoot(publishableKey?: string, options?: stripe.StripeOptions): ModuleWithProviders<StripeModule> {\n    return {\n      ngModule: StripeModule,\n      providers: [\n        StripeScriptTag,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ],\n    }\n  }\n}\n\n/**\n * @deprecated Please import `StripeModule` directly\n */\nexport const Module = StripeModule\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {StripeComponent as ɵa} from './components/StripeComponent';"]}